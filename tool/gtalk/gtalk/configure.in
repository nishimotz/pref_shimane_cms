dnl Process this file with autoconf to produce a configure script.
AC_INIT(gtalk, 1.3)

dnl install-sh will be searched (and found) here
AC_CONFIG_AUX_DIR(config)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP

AC_PATH_PROG(RM, rm)
AC_PATH_PROG(TAR, tar)
AC_PATH_PROG(GZIP, gzip)

dnl Check the system name
AC_CANONICAL_HOST

dnl Checks for libraries.
AC_CHECK_LIB(m, main)

if test "x$GCC = xyes"; then
     CFLAGS="-Wall -O2"
fi


AC_ARG_ENABLE(debug,
[  --enable-debug          Turn on debug mode (default=no)],
[ if test "x$enable_debug" = "xyes"; then
     AC_DEFINE(DEBUG)
     AC_DEFINE(KETSUGO_DEBUG)
     CFLAGS="$CFLAGS -g"
fi])

use_da=yes
AC_ARG_ENABLE(da,
[  --enable-da             Use audio output (default=yes)],
[ if test "$enable_da" = "no"; then
    use_da=no
fi])

if test "$use_da" = "yes"; then
  AC_MSG_CHECKING([audio device])
  case $host in
      *-solaris*)
	AC_MSG_RESULT([[solaris]])
      	AC_CHECK_HEADER([sys/audioio.h], [AC_DEFINE(SOLARIS)], [AC_MSG_ERROR([sys/audioio.h is not found])])
	;;
      *-linux*)
	AC_MSG_RESULT([[linux]])
	AC_CHECK_FILE([/usr/include/sys/soundcard.h], [AC_DEFINE(LINUX)],
	  [AC_MSG_ERROR([sys/soundcard.h is not found])])
dnl	AC_CHECK_HEADER([sys/soundcard.h], [AC_DEFINE(LINUX)],
dnl	  [AC_MSG_ERROR([sys/soundcard.h is not found])])
	;;
      *)
	AC_MSG_WARN([[not found]])
	;;
  esac	
fi

dnl Check option
AC_ARG_ENABLE(threadda,
[  --enable-threadda       Use Thread DA (default=no)],
[ if test "x$enable_threadda" = "xyes" -a "$use_da" = "yes"; then
     AC_DEFINE(THREAD_DA)
     AC_CHECK_LIB(pthread,main)
fi])

dnl Check option
dnl AC_CHECK_LIB(pthread,pthread_create,have_pthread=1,have_pthread=0)
dnl if test $have_pthread = 1 -a "$use_da" = "yes"; then
dnl 	AC_DEFINE(AUTO_DA)
dnl 	LIBS="$LIBS -lpthread"
dnl fi

dnl check byte order
AC_C_BIGENDIAN()
if test "x${ac_cv_c_bigendian}" = "xno"; then
   AC_DEFINE(WORDS_LITTLEENDIAN)
fi
		   
dnl check for readline library
have_readline=no
AC_CHECK_HEADER(readline/readline.h,
    AC_CHECK_LIB(readline, readline,
	   have_readline=yes
	   LIBS="$LIBS -lreadline",
	AC_MSG_CHECKING([for readline in -lreadline with -ltermcap])
	ac_save_LIBS="$LIBS"
	LIBS="$ac_save_LIBS -lreadline -ltermcap"
	AC_TRY_LINK([#include <stdio.h>
#include <readline/readline.h>],[readline("");],
	    AC_MSG_RESULT("yes")
	    have_readline=yes,
	  AC_MSG_RESULT("no")
	  AC_MSG_CHECKING([for readline in -lreadline with -lncurses])
	  LIBS="$ac_save_LIBS -lreadline -lncurses"
	  AC_TRY_LINK([#include <stdio.h>
#include <readline/readline.h>],[readline("");],
	      AC_MSG_RESULT("yes")
	      have_readline=yes,
	    AC_MSG_RESULT("no")
	    LIBS="$ac_save_LIBS"
	  )
	)
    )
)
if test $have_readline = yes; then
    AC_DEFINE(HAVE_READLINE)
    dnl check some definition
    AC_MSG_CHECKING([for readline verion > 4.1])
    AC_EGREP_HEADER(rl_compentry_func_t, readline/readline.h,
	AC_MSG_RESULT([yes]),
      AC_MSG_RESULT([no - use old func])
      AC_DEFINE(HAVE_READLINE_4_1_OLDER)
    )
fi

AC_OUTPUT(Makefile)
